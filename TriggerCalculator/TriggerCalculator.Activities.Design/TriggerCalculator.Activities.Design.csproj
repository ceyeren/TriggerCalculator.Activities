<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <TargetFrameworks>net6.0-windows</TargetFrameworks>
    <UseWPF>true</UseWPF>
		<RootNamespace>TriggerCalculator.Activities.Design</RootNamespace>
		<AssemblyName>TriggerCalculator.Activities.Design</AssemblyName>
    <PackageId>TriggerCalculator.Activities</PackageId>
    <EnableDefaultPageItems>false</EnableDefaultPageItems>
  </PropertyGroup>
  <!-- Package Metadata -->
  <PropertyGroup>
	<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
	<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
	<Description>Sometimes, cron is not enough for triggering process. At times like these, we need extra logic to determine process will run or not. For example, if a process must be run on Sunday every two week then the extra logic will be needed.

Inputs
Duration : Duration (Ex : If Duration is 5 and DurationType is DurationTypes.Minute then it waits for 5 minutes to run it again.)
DurationType : Duration Type (ex : DurationTypes.Year, DurationTypes.Day etc.)
InitialDate : Process is triggered from this date (new DateTime(year, month, day, hour, minute, second))
TimeZoneId : TimeZoneInfo.Id list can be found online (An example of TimeZoneInfo.Id : "GTB Standard Time")
Output
IsRunnable : Runnable status of process

This activities also needs to orchestrator triggers. But attention is needed to it. For example, If you set DurationType as DurationType.Hour then you must set orcestrator trigger as hourly or lower than it. When orchestrator triggers process then this activity checks process is proper for running and set IsRunnable variable. According the IsRunnable variable you can create if-else flow and run your sequence.</Description>
	<Authors>Ceyda Eren</Authors>
	<PackageTags>trigger, uipath, orchestrator, cron</PackageTags>
	<PackageProjectUrl></PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/NuGet/Samples/master/PackageIconNuspecExample/icon.png</PackageIconUrl>
    <!--<PackageIcon>packageIcon.png</PackageIcon>--> <!--PackageIcon not yet supported in UiPath Studio-->
    <AssemblyVersion>1.0.0.2</AssemblyVersion>
    <FileVersion>1.0.0.2</FileVersion>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <!-- Package Versions -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug' AND '$(DesignTimeBuild)' != 'true'">
    <PackageVersion>1.0.4</PackageVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <PackageVersion>1.0.4</PackageVersion>
  </PropertyGroup>
  <ItemGroup>
    <None Remove="Designers\TriggerCalculatorDesigner.xaml" />
  </ItemGroup>
  <!-- Package Icon -->
  <ItemGroup>
    <None Include="packageIcon.png" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <!--Filter out unnecessary files-->
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
    </ItemGroup>

    <!--Print batches for debug purposes-->
    <Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

    <ItemGroup>
      <!--Add file to package with consideration of sub folder. If empty, the root folder is chosen.-->
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <DocumentationFile>bin\$(Configuration)\TriggerCalculator.Activities.Design.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="UiPath.Workflow" Version="6.0.0-20220909-01" PrivateAssets="All" />
    <PackageReference Include="System.Activities.Core.Presentation" Version="6.0.0-*" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <Page Include="..\..\Shared\Themes\Generic.xaml">
      <Link>Themes\Generic.xaml</Link>
      <Generator>XamlIntelliSenseFileGenerator</Generator>
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Page>
    <Page Include="Designers\TriggerCalculatorDesigner.xaml">
      <Generator>MSBuild:UpdateDesignTimeXaml</Generator>
    </Page>
    <Page Include="Themes\Icons.xaml">
      <Generator>XamlIntelliSenseFileGenerator</Generator>
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\TriggerCalculator.Activities\TriggerCalculator.Activities.csproj" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Properties\Resources.*.resx">
      <DependentUpon>Resources.resx</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>
  <Import Project="..\..\Shared\UiPath.Shared.Activities.Design\UiPath.Shared.Activities.Design.projitems" Label="Shared" />
</Project>
